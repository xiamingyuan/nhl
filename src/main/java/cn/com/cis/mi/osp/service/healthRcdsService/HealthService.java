package cn.com.cis.mi.osp.service.healthRcdsService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2017-02-20T15:52:34.584+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "HealthService", 
                  wsdlLocation = "file:/Users/shensh/Desktop/mi-seiri/mi-back/mi-osp-nhl/src/main/java/cn/com/cis/mi/osp/service/healthRcdsService/10.117.130.142:8008",
                  targetNamespace = "HealthApp") 
public class HealthService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("HealthApp", "HealthService");
    public final static QName HealthServiceSoap12 = new QName("HealthApp", "HealthServiceSoap12");
    public final static QName HealthServiceSoap = new QName("HealthApp", "HealthServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/shensh/Desktop/mi-seiri/mi-back/mi-osp-nhl/src/main/java/cn/com/cis/mi/osp/service/healthRcdsService/10.117.130.142:8008");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HealthService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/shensh/Desktop/mi-seiri/mi-back/mi-osp-nhl/src/main/java/cn/com/cis/mi/osp/service/healthRcdsService/10.117.130.142:8008");
        }
        WSDL_LOCATION = url;
    }

    public HealthService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HealthService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HealthService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public HealthService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HealthService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HealthService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns HealthServiceSoap
     */
    @WebEndpoint(name = "HealthServiceSoap12")
    public HealthServiceSoap getHealthServiceSoap12() {
        return super.getPort(HealthServiceSoap12, HealthServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HealthServiceSoap
     */
    @WebEndpoint(name = "HealthServiceSoap12")
    public HealthServiceSoap getHealthServiceSoap12(WebServiceFeature... features) {
        return super.getPort(HealthServiceSoap12, HealthServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns HealthServiceSoap
     */
    @WebEndpoint(name = "HealthServiceSoap")
    public HealthServiceSoap getHealthServiceSoap() {
        return super.getPort(HealthServiceSoap, HealthServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HealthServiceSoap
     */
    @WebEndpoint(name = "HealthServiceSoap")
    public HealthServiceSoap getHealthServiceSoap(WebServiceFeature... features) {
        return super.getPort(HealthServiceSoap, HealthServiceSoap.class, features);
    }

}
